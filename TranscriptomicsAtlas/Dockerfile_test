FROM ubuntu:22.04
ENV RUN_IN_CONTAINER="True"
ENV DEBIAN_FRONTEND=noninteractive
WORKDIR /opt/TAtlas

### PYTHON modules and utils
RUN apt-get update && \
    apt-get install wget ca-certificates python3-pip -y --no-install-recommends && \
    pip3 install boto3 watchtower requests backoff --no-cache-dir

### SRA-TOOLKIT
RUN wget https://ftp-trace.ncbi.nlm.nih.gov/sra/sdk/3.0.1/sratoolkit.3.0.1-ubuntu64.tar.gz -qO - \
        | tar -zx -C /opt/TAtlas/ && \
    echo 'export PATH="$PATH":/opt/TAtlas/sratoolkit.3.0.1-ubuntu64/bin' >> ~/.bashrc

### SALMON
RUN wget https://github.com/COMBINE-lab/salmon/releases/download/v1.10.0/salmon-1.10.0_linux_x86_64.tar.gz -qO -  \
        | tar -zx -C /opt/TAtlas/ && \
    echo 'export PATH="$PATH":/opt/TAtlas/salmon-latest_linux_x86_64/bin' >> ~/.bashrc

### R
RUN echo "LC_ALL=C.UTF-8 R" >> /etc/environment
RUN apt-get install r-base-dev -y --no-install-recommends

### R packages
# 'DESeq2', 'RCurl', 'RcppArmadillo' (libraries required by DESeq2) require
RUN apt-get install libxml2-dev libssl-dev libcurl4-openssl-dev libopenblas-dev libopenblas-dev -y
RUN Rscript -e 'install.packages(c("readr", "dplyr", "BiocManager", "jsonlite", "data.table"))'
RUN Rscript -e 'BiocManager::install(c("DESeq2", "tximport"))'

#### STAR
RUN wget https://github.com/alexdobin/STAR/archive/2.7.10b.tar.gz -O - | tar -zx -C /opt/TAtlas
RUN echo 'export PATH="$PATH":/opt/TAtlas/STAR-2.7.10b/bin/Linux_x86_64' >> ~/.bashrc

RUN pip3 install moto[sqs,s3,dynamodb]==5.0.1 pytest==8.0.0 --no-cache-dir

RUN mkdir /root/.aws
RUN echo "[default]\n \
aws_access_key_id = test\n \
aws_secret_access_key = test" >> /root/.aws/credentials

# Config for sratoolkit untill I find a way to configure it using cli/bash
COPY data/.ncbi /root/.ncbi
COPY data/DESeq2/tx2gene.gencode.v42.csv /opt/TAtlas/DESeq2/tx2gene.gencode.v42.csv
COPY data/DESeq2/SRR11982817_ref_chr22_release111 /opt/TAtlas/DESeq2/SRR11982817_ref_release111/

ENV AWS_DEFAULT_REGION="us-east-1"
ENV queue_name="NearData_queue"
ENV s3_bucket_name="neardata-salmon-ec2-results"
ENV dynamodb_metadata_table="neardata-test-table"
ENV execution_mode="Container"
ENV index_release="111"

COPY src/scripts/ /opt/TAtlas/DESeq2/
COPY src/Consumer /opt/TAtlas/Consumer
COPY src/Tests/ /opt/TAtlas/Consumer

RUN sed -i '12,15s/^/# /' /opt/TAtlas/Consumer/logger.py  # comment out lines with watchtower logging to disable it
RUN sed -i '16s~.*~        ["prefetch", srr_id, "--max-size", "30g"],~' /opt/TAtlas/Consumer/pipeline_steps.py  # disable small file processing check to use small file as test input

ENV pipeline_type="Salmon"
ENTRYPOINT ["pytest", "/opt/TAtlas/Consumer/test_salmon_pipeline.py", "-o", "log_cli=true", "-m", "essential", "-s"]

#ENV pipeline_type="STAR"
#ENTRYPOINT ["pytest", "/opt/TAtlas/Consumer/test_star_pipeline.py", "-o", "log_cli=true", "-m", "essential", "-s"]